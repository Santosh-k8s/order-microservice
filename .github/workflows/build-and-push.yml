name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Azure CLI Tenant ID
        id: check-tenant-id
        run: |
          # Get the Tenant ID from Azure CLI after login
          CLI_TENANT_ID=$(az account show --query tenantId -o tsv)

          # Retrieve the Tenant ID from GitHub secrets
          SECRET_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}

          # Compare the two Tenant IDs
          if [ "$CLI_TENANT_ID" = "$SECRET_TENANT_ID" ]; then
            echo "✅ Tenant IDs match."
          else
            echo "❌ Tenant IDs do not match."
            echo "Azure CLI Tenant ID: $CLI_TENANT_ID"
            echo "GitHub Secret Tenant ID: $SECRET_TENANT_ID"
            exit 1  # Exit with an error code if the Tenant IDs do not match
          fi

      # Optional Step: Print the result of the comparison
      - name: Print Comparison Result
        if: ${{ steps.check-tenant-id.outcome == 'success' }}
        run: echo "The Tenant IDs are equal."

      - name: Docker Login with ACR Admin Credentials
        env:
          ACR_LOGIN_SERVER: "classpathio.azurecr.io"
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        run: |
          echo $ACR_PASSWORD | docker login $ACR_LOGIN_SERVER -u $ACR_USERNAME --password-stdin
         
        
      # Get an ACR access token and use it for Docker login
      - name: Get ACR Access Token and Login
        env:
          ACR_LOGIN_SERVER: "classpathio.azurecr.io"  # Replace with your ACR name, e.g., classpathio.azurecr.io
        run: |
          # Get an OAuth token for ACR
          ACCESS_TOKEN=$(az account get-access-token --resource "https://${ACR_LOGIN_SERVER}" --query accessToken -o tsv)
          echo $ACCESS_TOKEN
          # Log in to Docker with the access token
          echo $ACCESS_TOKEN | docker login $ACR_LOGIN_SERVER -u 00000000-0000-0000-0000-000000000000 --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-spring-app:latest .

      # Tag Docker image with ACR URL
      - name: Tag Docker image with ACR URL
        env:
          ACR_LOGIN_SERVER: "classpathio.azurecr.io"  # Replace with your ACR name
        run: |
          docker tag my-spring-app:latest ${ACR_LOGIN_SERVER}/my-spring-app:latest

      # Push Docker image to ACR
      - name: Push Docker image to ACR
        env:
          ACR_LOGIN_SERVER: "classpathio.azurecr.io"  # Replace with your ACR name
        run: |
          docker push ${ACR_LOGIN_SERVER}/my-spring-app:latest
